import 'package:bingo_wholesale/data_models/models/user_model/user_model.dart';import 'package:dartz/dartz.dart';import '../../data/repository_impl.dart';import '../models/failure.dart';import 'base_usecase.dart';class LoginUseCase extends BaseUseCase<LoginUseCaseInputs, UserModel> {  final RepositoryImpl _repository;  LoginUseCase(this._repository);  @override  Future<Either<Failure, UserModel>> execute(LoginUseCaseInputs input) async {    return await _repository.login(input.email, input.password);  }}class LoginUseCaseInputs {  String email;  String password;  LoginUseCaseInputs({    required this.email,    required this.password,  });}