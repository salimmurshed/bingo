import 'package:http/http.dart';import 'package:injectable/injectable.dart';import 'package:stacked/stacked.dart';import '../app/locator.dart';import '../const/database_helper.dart';import '../data_models/models/association_request_wholesaler_model/association_request_wholesaler_model.dart';import '../presentation/common_widgets/alert/alert_dialog.dart';import '../services/local_data/local_data.dart';import '../services/local_data/table_names.dart';import '../services/navigation/navigationService.dart';import '../services/network/network_info.dart';import '../services/network/network_urls.dart';import 'dart:convert' as convert;import '../services/network/web_service.dart';@lazySingletonclass RepositoryWholesaler with ReactiveServiceMixin {  RepositoryWholesaler() {    listenToReactiveValues([]);    // _localData.delete(TableNames.countryTableName);    // _localData.delete(TableNames.storeTableName);    // _localData.delete(TableNames.wholesalerList);    // _localData.delete(TableNames.fiaList);    // _localData.delete(TableNames.retailerAssociationList);    // _localData.delete(TableNames.wholeSalerAssociationList);  }  final dbHelper = DatabaseHelper.instance;  var networkInfo = locator<NetworkInfoService>();  final WebService _webService = locator<WebService>();  final NavigationService _navigationService = locator<NavigationService>();  final LocalData _localData = locator<LocalData>();  List<AssociationRequestWholesalerData> associationRequestWholesalerData = [];  //all Wholesaler Association list  void getWholesalersAssociationData() async {    dbHelper.queryAllRows(TableNames.wholeSalerAssociationList).then((value) {      associationRequestWholesalerData = value          .map((d) => AssociationRequestWholesalerData.fromJson(d))          .toList();      print(value          .map((d) => AssociationRequestWholesalerData.fromJson(d))          .toList());    });    try {      Response response = await _webService          .getRequest(NetworkUrls.requestAssociationListForWholesaler);      final responseData = AssociationRequestWholesalerModel.fromJson(          convert.jsonDecode(response.body));      associationRequestWholesalerData = responseData.data!;      _localData.insert(          TableNames.wholeSalerAssociationList, responseData.data!);    } on Exception catch (e) {      _navigationService.displayDialog(AlertDialogMessage(e.toString()));    }    notifyListeners();  }}