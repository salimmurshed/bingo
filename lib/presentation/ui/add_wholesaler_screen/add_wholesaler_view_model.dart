import 'package:bingo_wholesale/const/app_strings.dart';import 'package:bingo_wholesale/data_models/construction_model/wholesaler_data.dart';import 'package:bingo_wholesale/repository/repository_retailer.dart';import 'package:bingo_wholesale/services/navigation/navigationService.dart';import 'package:flutter/cupertino.dart';import 'package:stacked/stacked.dart';import '../../../app/locator.dart';class AddWholesalerViewModel extends ReactiveViewModel {  final RepositoryRetailer _repositoryRetailer = locator<RepositoryRetailer>();  final NavigationService _navigationService = locator<NavigationService>();  String submitButton = AppString.submitButton;  String selectWholesaler = AppString.selectWholesaler;  String selectCurrency = AppString.selectCurrency;  String visitFrequency = AppString.visitFrequency;  TextEditingController purchaseController = TextEditingController();  TextEditingController averageTicketController = TextEditingController();  TextEditingController amountController = TextEditingController();  List<WholesalerData> _creditLineInformation = [];  List<WholesalerData> get creditLineInformation => _creditLineInformation;  WholesalerData wholesalerData = WholesalerData();  bool isNew = true;  void setDetails(WholesalerData arguments) {    print(arguments.monthlyPurchase);    wholesalerData = arguments;    submitButton = AppString.update;    isNew = false;    preFix(arguments);    notifyListeners();  }  preFix(WholesalerData data) {    print(creditLineInformation.length);    selectWholesaler = data.wholesaler!;    selectCurrency = data.currency!;    visitFrequency = data.visitFrequency!;    purchaseController.text = data.monthlyPurchase!;    averageTicketController.text = data.averageTicket!;    amountController.text = data.amount!;    notifyListeners();  }  void changeSelectWholesaler(String v) {    selectWholesaler = v;    notifyListeners();  }  void changeSelectCurrency(String v) {    selectCurrency = v;    notifyListeners();  }  void changeVisitFrequency(String v) {    visitFrequency = v;    notifyListeners();  }  void addWholesaler() {    print(purchaseController.text);    print(averageTicketController.text);    print(amountController.text);    WholesalerData item = WholesalerData(        id: DateTime.now().microsecondsSinceEpoch.toString(),        wholesaler: selectWholesaler,        currency: selectCurrency,        monthlyPurchase: purchaseController.text,        averageTicket: averageTicketController.text,        visitFrequency: visitFrequency,        amount: amountController.text);    _repositoryRetailer.addCreditLineInformation(item);    _navigationService.pop();  }  void updateWholesaler() {    WholesalerData item = WholesalerData(        id: wholesalerData.id!,        wholesaler: selectWholesaler,        currency: selectCurrency,        monthlyPurchase: purchaseController.text,        averageTicket: averageTicketController.text,        visitFrequency: visitFrequency,        amount: amountController.text);    _repositoryRetailer.updateWholesaler(wholesalerData.id!, item);    _navigationService.pop();  }  void removeCreditLineInformation() {    _repositoryRetailer.removeCreditLineInformation(wholesalerData.id!);    _navigationService.pop();  }  @override  List<ReactiveServiceMixin> get reactiveServices => [_repositoryRetailer];}