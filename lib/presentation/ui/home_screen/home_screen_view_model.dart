import 'package:bingo_wholesale/app/router.dart';import 'package:bingo_wholesale/const/app_bar_titles.dart';import 'package:bingo_wholesale/data_models/models/confirmation_model/confirmation_model.dart';import 'package:bingo_wholesale/data_models/models/dashboard_card_properties_model/dashboard_card_properties_model.dart';import 'package:bingo_wholesale/data_models/models/store_model/store_model.dart';import 'package:stacked/stacked.dart';import '../../../app/locator.dart';import '../../../data/data_source/cards_properties_list.dart';import '../../../data/data_source/invoices_data.dart';import '../../../data_models/models/country_list_model/country_list_model.dart';import '../../../data_models/models/invoice_model/invoice_model.dart';import '../../../data_models/models/recommandation_deposite_model/recommandation_deposite_model.dart';import '../../../data_models/models/user_model/user_model.dart';import '../../../services/api_service/api_service.dart';import '../../../services/auth_service/auth_service.dart';import '../../../services/navigation/navigationService.dart';class HomeScreenViewModel extends ReactiveViewModel {  final AuthService _authService = locator<AuthService>();  NavigationService _navigationService = locator<NavigationService>();  final ApiService _apiService = locator<ApiService>();  List<CountryData> get countryList => _apiService.countryList.value;  List<ConfirmationModel> get confirmationData => _apiService.confirmationData;  List<InvoiceModel> invoiceData = invoiceMock;  List<StoreData> get storeData => _apiService.storeList.value;  List<ReccomandationModel> get recommadationData =>      _apiService.recommadationData;  UserModel get user => _authService.user.value;  int secondaryBottomTab = 0;  int requestTabIndex = 0;  int settingTabIndex = 2;  String appBarTitle = "DASHBOARD";  HomeScreenViewModel() {    // _apiService.getCountriesData();    _apiService.geStoreData();  }  bool get isRetailer => _authService.isRetailer.value;  void gotoSalesDetailsScreen(ConfirmationModel data) {    _navigationService.pushNamed(Routes.salesDetailsScreen, arguments: data);  }  void changeSecondaryBottomTab(i) {    secondaryBottomTab = i;    switch (i) {      case 0:        appBarTitle = AppBarTitles.dashBoard;        break;      case 1:        appBarTitle = AppBarTitles.request;        break;      case 2:        appBarTitle = AppBarTitles.settings;        break;      case 3:        appBarTitle = AppBarTitles.accountBalance;        break;      default:        appBarTitle = AppBarTitles.dashBoard;    }    notifyListeners();  }  void changeRequestTab(i) {    requestTabIndex = i;    notifyListeners();  }  void changeSettingTab(i) {    settingTabIndex = i;    notifyListeners();  }  void gotoAddNewRequest() {    _navigationService.pushNamed(Routes.addNewAssociationRequest);  }  List<DashboardCardPropertiesModel> retailerCardsPropertiesList =      retailerCardsPropertiesListData;  List<DashboardCardPropertiesModel> wholesalerCardsPropertiesList =      wholesalerCardsPropertiesListData;  @override  List<ReactiveServiceMixin> get reactiveServices =>      [_authService, _apiService];}