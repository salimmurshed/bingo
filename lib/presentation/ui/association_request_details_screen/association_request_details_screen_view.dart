import 'package:bingo_wholesale/const/all_const.dart';import 'package:bingo_wholesale/const/app_extensions/status.dart';import 'package:bingo_wholesale/const/app_sizes/app_sizes.dart';import 'package:bingo_wholesale/const/app_styles/app_box_decoration.dart';import 'package:bingo_wholesale/const/utils.dart';import 'package:bingo_wholesale/data_models/models/retailer_wholesaler_association_request_model/retailer_wholesaler_association_request_model.dart';import 'package:bingo_wholesale/presentation/widgets/buttons/cancel_button.dart';import 'package:bingo_wholesale/presentation/widgets/buttons/submit_button.dart';import 'package:bingo_wholesale/presentation/widgets/cards/shimmer.dart';import 'package:flutter/material.dart';import 'package:stacked/stacked.dart';import '../../../data_models/models/association_wholesaler_equest_details_model/association_wholesaler_equest_details_model.dart';import '../../widgets/dropdowns/selected_dropdown_field.dart';import '../../widgets/text_fields/name_text_field.dart';import 'association_request_details_screen_view_model.dart';class AssociationRequestDetailsScreen extends StatelessWidget {  const AssociationRequestDetailsScreen({Key? key}) : super(key: key);  @override  Widget build(BuildContext context) {    return ViewModelBuilder<AssociationRequestDetailsScreenModel>.reactive(        onModelReady: (AssociationRequestDetailsScreenModel model) {          model.callDetails(              ModalRoute.of(context)!.settings.arguments as String);        },        viewModelBuilder: () => AssociationRequestDetailsScreenModel(),        builder: (context, model, child) {          return Scaffold(            appBar: AppBar(              actions: [                IconButton(                  onPressed: () {},                  icon: Image.asset(AppAsset.searchIcon),                ),                const SizedBox(                  width: 15.0,                ),              ],              leading: IconButton(                onPressed: model.gotoBackScreen,                icon: const Icon(                  Icons.arrow_back_ios_outlined,                  color: AppColors.background,                ),              ),              title: Text(AppString.requestsDetail.toUpperCase()),              backgroundColor: model.isRetailer                  ? AppColors.appBarColorRetailer                  : AppColors.appBarColorWholesaler,            ),            body: model.setScreenBusy                ? ShimmerScreen(number: 2)                : wholesalerBody(model),          );        });  }  Widget retailersBody(AssociationRequestDetailsScreenModel model) {    CompanyInformationRetails companyInformation =        model.associationRequestRetailerDetails.data![0].companyInformation![0];    ContactInformationRetails contactInformation =        model.associationRequestRetailerDetails.data![0].contactInformation![0];    return Padding(      padding: AppPaddings.screenARDSWidgetPadding,      child: Column(        crossAxisAlignment: CrossAxisAlignment.start,        children: [          _commonText(AppString.companyInformation),          18.0.giveHeight,          Container(            margin: AppMargins.screenARDSWidgetMarginH,            padding: AppPaddings.screenARDSWidgetInnerPadding,            decoration: AppBoxDecoration.shadowBox,            child: Column(              crossAxisAlignment: CrossAxisAlignment.start,              children: [                _commonText('${companyInformation.companyName}'),                18.0.giveHeight,                Row(                  mainAxisAlignment: MainAxisAlignment.spaceBetween,                  children: [                    getNiceText("Tax ID:${companyInformation.taxId}",                        nxtln: true),                    getNiceText(                        "Association Date:${companyInformation.associationDate}",                        nxtln: true),                  ],                ),                12.0.giveHeight,                SizedBox(                  width: 319.0,                  child: getNiceText(                      "Company Address:${companyInformation.companyAddress}",                      nxtln: true),                ),              ],            ),          ),          30.0.giveHeight,          _commonText(AppString.contactInformation),          18.0.giveHeight,          Container(            margin: AppMargins.screenARDSWidgetMarginH,            padding: AppPaddings.screenARDSWidgetInnerPadding,            decoration: AppBoxDecoration.shadowBox,            child: Column(              crossAxisAlignment: CrossAxisAlignment.start,              children: [                Row(                  children: [                    SizedBox(                      width: 40.0.wp,                      child: Column(                        crossAxisAlignment: CrossAxisAlignment.start,                        children: [                          getNiceText(                              "First Name:${contactInformation.firstName}",                              nxtln: true),                          15.0.giveHeight,                          getNiceText("Position:${contactInformation.position}",                              nxtln: true),                        ],                      ),                    ),                    Column(                      crossAxisAlignment: CrossAxisAlignment.start,                      children: [                        getNiceText("Last Name:${contactInformation.lastName}",                            nxtln: true),                        15.0.giveHeight,                        getNiceText("ID: ${contactInformation.id}",                            nxtln: true),                      ],                    ),                  ],                ),                15.0.giveHeight,                getNiceText(                    "Company Address:${companyInformation.companyAddress}",                    nxtln: true),              ],            ),          ),          32.0.giveHeight,          Align(            alignment: Alignment.topCenter,            child: SubmitButton(              onPressed: model.openActivationCodeDialog,              width: 325.0,              height: 45.0,              active: true,              text: AppString.activationCode,            ),          ),        ],      ),    );  }  Widget wholesalerBody(AssociationRequestDetailsScreenModel model) {    CompanyInformation companyInformation = model        .associationRequestWholesalerDetails.data![0].companyInformation![0];    ContactInformation contactInformation = model        .associationRequestWholesalerDetails.data![0].contactInformation![0];    return Padding(      padding: AppPaddings.screenARDSWidgetPadding,      child: SingleChildScrollView(        child: Column(          crossAxisAlignment: CrossAxisAlignment.start,          children: [            Container(              margin: AppMargins.screenARDSWidgetMarginH,              padding: AppPaddings.screenARDSWidgetInnerPadding,              decoration: AppBoxDecoration.shadowBox,              child: Column(                crossAxisAlignment: CrossAxisAlignment.start,                children: [                  _commonText(companyInformation.retailerName!),                  18.0.giveHeight,                  const Divider(),                  18.0.giveHeight,                  Center(                    child: Column(                      mainAxisSize: MainAxisSize.min,                      crossAxisAlignment: CrossAxisAlignment.center,                      children: [                        Text("${AppString.status}:"),                        statusNamesEnumFromServer(companyInformation.status)                            .toStatus(textStyle: AppTextStyles.noDataTextStyle)                      ],                    ),                  ),                  18.0.giveHeight,                  const Divider(),                  10.0.giveHeight,                  _subTitleText("Tax ID Type: ${companyInformation.taxIdType}"),                  _subTitleText("Tax ID: ${companyInformation.taxId}"),                  _subTitleText(                      "Phone Number: ${companyInformation.phoneNumber}"),                  _subTitleText("Category: ${companyInformation.category}"),                  _subTitleText(                      "Company Address: ${companyInformation.companyAddress}"),                  if (companyInformation.status!.toLowerCase() ==                          "Accepted".toLowerCase() ||                      companyInformation.status!.toLowerCase() ==                          "verified".toLowerCase())                    30.0.giveHeight,                  if (companyInformation.status!.toLowerCase() ==                          "Accepted".toLowerCase() ||                      companyInformation.status!.toLowerCase() ==                          "verified".toLowerCase())                    Center(                      child: SubmitButton(                        onPressed: model.openActivationCodeDialog,                        text: "activation code",                        height: 45.0,                        width: 325.0,                      ),                    ),                  30.0.giveHeight,                ],              ),            ),            30.0.giveHeight,            _commonText(AppString.ownerLegalRepresentative),            18.0.giveHeight,            Container(              margin: AppMargins.screenARDSWidgetMarginH,              width: double.infinity,              padding: AppPaddings.screenARDSWidgetInnerPadding,              decoration: AppBoxDecoration.shadowBox,              child: Column(                crossAxisAlignment: CrossAxisAlignment.start,                children: [                  _subTitleText("First Name: ${contactInformation.firstName}"),                  _subTitleText("Last Name: ${contactInformation.lastName}"),                  _subTitleText("Email: ${contactInformation.email}"),                  _subTitleText("ID Type: ${contactInformation.phoneNumber}"),                  _subTitleText("ID: ${contactInformation.id}"),                  _subTitleText(                      "Phone Number: ${contactInformation.phoneNumber}"),                  _subTitleText("Country: ${contactInformation.country}"),                  _subTitleText("City: ${contactInformation.city}"),                  _subTitleText("Position: ${contactInformation.position}"),                  SubmitButton(                    color: AppColors.backgroundSecondary,                    height: 30.0,                    width: 123.0,                    text: AppString.viewDocuments,                    active: false,                  )                ],              ),            ),            32.0.giveHeight,            _commonText(AppString.internalInformation),            18.0.giveHeight,            Container(              margin: AppMargins.screenARDSWidgetMarginH,              width: double.infinity,              padding: AppPaddings.screenARDSWidgetInnerPadding,              decoration: AppBoxDecoration.shadowBox,              child: Column(                crossAxisAlignment: CrossAxisAlignment.start,                children: [                  NameTextField(                    controller: model.internalIdController,                    fieldName: AppString.internalID,                  ),                  24.0.giveHeight,                  SelectedDropdownField(                    fieldName: AppString.selectCustomerType,                    items: model.customerType,                    dropdownValue: model.selectedCustomerType,                    onChange: (String value) {                      model.changeCustomerType(value);                    },                  ),                  24.0.giveHeight,                  SelectedDropdownField(                    fieldName: AppString.gracePeriodGroups,                    items: model.gracePeriodGroup,                    dropdownValue: model.selectedGracePeriodGroups,                    onChange: (String value) {                      model.changeGracePeriodGroups(value);                    },                  ),                  24.0.giveHeight,                  SelectedDropdownField(                    fieldName: AppString.pricingGroups,                    items: model.pricingGroup,                    dropdownValue: model.selectedPricingGroups,                    onChange: (String value) {                      model.changePricingGroups(value);                    },                  ),                  24.0.giveHeight,                  Text(                      "${AppString.salesZone} -> ${model.internalInformation.salesZone}"),                  15.0.giveHeight,                  Container(                    decoration: AppBoxDecoration.borderDecoration,                    height: 45.0,                    child: ButtonTheme(                      alignedDropdown: true,                      padding: AppPaddings.zero,                      child: DropdownButtonHideUnderline(                        child: DropdownButton<String>(                          hint: Text(                            AppString.salesZone,                            style: const TextStyle(                              fontSize: 12,                              color: Color(0xFFa5a5a5),                            ),                            textAlign: TextAlign.center,                          ),                          elevation: 0,                          isDense: false,                          isExpanded: true,                          value: model.selectedSalesZoneString,                          icon: const Icon(Icons.arrow_drop_down_outlined),                          items: [                            DropdownMenuItem<String>(                              value: "xxxxxx",                              child: Text('Select ${AppString.salesZone}'),                            ),                            for (var i = 0; i < model.salesZone.length; i++)                              DropdownMenuItem<String>(                                value: model.salesZone[i].saleZone,                                child: Text(model.salesZone[i].zoneName!),                              )                          ],                          onChanged: (String? newValue) {                            // print('newValue');                            // print(newValue!.zoneName!);                            // print(newValue.saleZone!);                            model.changeSalesZone(newValue!);                          },                        ),                      ),                    ),                  ),                  24.0.giveHeight,                  SelectedDropdownField(                    fieldName: AppString.allowOrders,                    items: model.allowOrdersList,                    dropdownValue: model.selectedAllowOrders,                    onChange: (String value) {                      model.changeAllowOrders(value);                    },                  ),                  24.0.giveHeight,                ],              ),            ),            32.0.giveHeight,            _commonText(AppString.viewRetailerStores),            18.0.giveHeight,            Center(              child: Text(                AppString.noDataInTable,                style: AppTextStyles.noDataTextStyle,              ),            ),            32.0.giveHeight,            _commonText(AppString.internalInformation),            18.0.giveHeight,            Container(              margin: AppMargins.screenARDSWidgetMarginH,              width: double.infinity,              padding: AppPaddings.screenARDSWidgetInnerPadding,              decoration: AppBoxDecoration.shadowBox,              child: Column(                crossAxisAlignment: CrossAxisAlignment.start,                children: [                  Text(AppString.customerSinceDate),                  10.0.giveHeight,                  SizedBox(                    height: 45.0,                    child: TextField(                      readOnly: true,                      decoration: AppInputStyles.ashOutlineBorder,                      onTap: model.openCalender,                      controller: model.selectDate,                    ),                  ),                  24.0.giveHeight,                  NameTextField(                    controller: model.monthlySalesController,                    fieldName: AppString.monthlySales,                  ),                  24.0.giveHeight,                  NameTextField(                    controller: model.averageSalesTicketController,                    fieldName: AppString.averageSalesTicket,                  ),                  24.0.giveHeight,                  Column(                    crossAxisAlignment: CrossAxisAlignment.start,                    children: [                      Text(AppString.visitFrequency),                      15.0.giveHeight,                      Container(                        decoration: AppBoxDecoration.borderDecoration,                        height: 45.0,                        child: ButtonTheme(                          alignedDropdown: true,                          padding: AppPaddings.zero,                          child: DropdownButtonHideUnderline(                            child: DropdownButton<int>(                              hint: Text(                                AppString.visitFrequency,                                style: const TextStyle(                                  fontSize: 12,                                  color: Color(0xFFa5a5a5),                                ),                                textAlign: TextAlign.center,                              ),                              elevation: 0,                              isDense: false,                              isExpanded: true,                              value: model.selectedVisitFrequency,                              icon: const Icon(Icons.arrow_drop_down_outlined),                              items: [                                DropdownMenuItem<int>(                                  value: 0,                                  child: Text(                                      'Select ${AppString.visitFrequency}'),                                ),                                for (var i = 0;                                    i < model.visitFrequentlyList.length;                                    i++)                                  DropdownMenuItem<int>(                                    value: model.visitFrequentlyList[i]["id"],                                    child: Text(                                        model.visitFrequentlyList[i]["title"]),                                  )                              ],                              onChanged: (int? newValue) {                                model.changeVisitFrequency(newValue!);                              },                            ),                          ),                        ),                      ),                    ],                  ),                  24.0.giveHeight,                  NameTextField(                    controller: model.suggestedCreditLineController,                    fieldName: AppString.suggestedCreditLineAmount,                  ),                  24.0.giveHeight,                ],              ),            ),            20.0.giveHeight,            Row(              mainAxisAlignment: MainAxisAlignment.spaceAround,              children: [                CancelButton(                  text: AppString.cancelButton,                  width: 40.0.wp,                ),                SubmitButton(                  text: AppString.submitButton,                  width: 40.0.wp,                ),              ],            ),            40.0.giveHeight,          ],        ),      ),    );  }  _subTitleText(String text) {    return getNiceText(      text,      style: AppTextStyles.requestDetailsSubTitle,      padding: 5.0,    );  }  _commonText(String text) {    return Padding(      padding: AppPaddings.screenARDSTextPaddingH,      child: Text(        text,        style: AppTextStyles.dashboardHeadTitle.copyWith(          fontWeight: AppFontWeighs.semiBold,        ),      ),    );  }}